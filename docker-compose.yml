  version: '3'

  networks:
    holter-devops-network:
      name: holter-devops

  services:
    postgres:
      image: postgres:11
      hostname: postgres
      ports:
        - 5432:5432
      volumes:
        - ./postgres:/var/lib/postgresql/data
        - ./initdb:/docker-entrypoint-initdb.d
      networks:
        - holter-devops-network
      environment:
        POSTGRES_DB: holter-devops
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
      restart: always
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -d holter-devops -U postgres"]
        interval: 10s
        timeout: 30s
        retries: 10
    
    holter-devops:
      build: .
      image: harbor.tce.rn.gov.br/metrics/holter-devops
      networks:
        - holter-devops-network
      ports:
        - 8080:8080
      environment:
        DATABASE_PATH: /data
        TOKEN_SECRET: 6aca05987fcaf7aadd24f158106df506d3d6ef7a6f40c12014a002b72ecc9b394db118836650beb89627f75f454217544ba3de7948252de0f6dac17af2f080ab
      volumes:
        - /data/holter:/data
      healthcheck:
        test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://holter-devops:8080/holter/api/test || exit 1"]
        interval: 30s
        timeout: 10s
        retries: 3
      depends_on:
        postgres:
          condition: service_healthy

    flyway:
      container_name: flyway
      image: flyway/flyway:9.15-alpine
      volumes:
        - ./sql:/flyway/sql
      networks:
        - holter-devops-network
      environment:
        - FLYWAY_USER=postgres
        - FLYWAY_PASSWORD=postgres
        - FLYWAY_URL=jdbc:postgresql://postgres:5432/holter-devops
        - FLYWAY_BASELINE_VERSION=0.0
      command: -connectRetries=60 -baselineOnMigrate=true migrate
      depends_on:
        postgres:
          condition: service_healthy
        holter-devops:
          condition: service_healthy